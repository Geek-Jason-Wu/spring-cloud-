##
Spring Cloud Eureka 是spring Cloud Netflix微服务套件中的一部分，他基于Netflix Eureka 做了二次封装，主要负责完成微服务架构中的服务治理功能。
Spring Cloud Eureka增加了Spring Boot风格的自动化配置，我们只需要通过简单引入依赖和注解配置就能让Spring Boot构建的微服务轻松地与Eureka服务治理
体系进行整合。
##
服务治理是微服务架构中最为核心和基础的模块，主要用来实现各个微服务实例的自动化注册与发现。
- 服务注册：在服务治理框架中，通常会构建一个注册中心，每个服务单元向注册中心登记自己提供的服务，将主机与端口、版本号、通信协议等一些附加
信息告知注册中心，注册中心按服务名分类组织服务清单。当服务的进程启动并向注册中心注册自己的服务后，注册中心会一心跳的方式检测注册清单中的服
务是否可用，若不可用会从服务清单中移除，达到排除故障服务的效果。
- 服务发现：由于在服务治理框架下运作，服务间的调用不再通过指定具体的实例地址来实现，而是通过向服务，名发起请求调用实现。所以服务调用方在
调用服务提供方的接口时，并不知道具体的服务实例的位置。因此，调用方需要向服务注册中心咨询服务，并获取所有服务的清单，以实现对具体服务实例的
访问。
##
Eureka服务端，也就是服务注册中心，同其他服务注册中心一样支持高可用配置，它依托于强一致性提供良好的服务实例可用性，可以应对多种不同的故障场景。
如果Eureka以集群模式部署，当集群中有分片出现故障时，那么Eureka就转入自我保护模式。他允许在分片故障期间继续提供服务的发现与注册，当分片恢复运行时，
集群中的其他分片会把它们的状态再次同步回来。
##
Eureka客户端，主要处理服务的注册与发现。客户端通过注解和参数配置的方式，嵌入在客户端应用程序的代码中，在应用程序运行时，Eureka客户端向注册中心
注册自己提供的服务并周期性的发送心跳来更新他的有效性。同时，他也能从服务端查询当前注册的服务信息并把他们缓存到本地周期性地刷新服务状态。
##
####基础架构
 - 服务注册中心：Eureka提供的服务端，提供服务注册与发现的功能，即eureka-server
 - 服务提供者：提供服务的应用，可以是spring boot应用，也可以是其他技术平台且遵循Eureka通信机制的应用。他将自己提供的服务注册到Eureka，以供其他
            应用发现。
 - 服务消费者：消费者应用从服务注册中心获取服务列表，从而使消费者可以知道去何处调用其他需要的服务。

